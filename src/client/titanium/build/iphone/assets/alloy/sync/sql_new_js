function SQLiteMigrateDB(e){this.dbname=e.adapter.db_name,this.table=e.adapter.collection_name,this.idAttribute=e.adapter.idAttribute,this.column=function(e){var t=e.split(/\s+/),n=t[0];switch(n.toLowerCase()){case"string":case"varchar":case"date":case"datetime":Ti.API.warn('"'+n+'" is not a valid sqlite field, using TEXT instead');case"text":n="TEXT";break;case"int":case"tinyint":case"smallint":case"bigint":case"boolean":Ti.API.warn('"'+n+'" is not a valid sqlite field, using INTEGER instead');case"integer":n="INTEGER";break;case"double":case"float":case"decimal":case"number":Ti.API.warn('"'+e+'" is not a valid sqlite field, using REAL instead');case"real":n="REAL";break;case"blob":n="BLOB";break;case"null":n="NULL";break;default:n="TEXT"}return t[0]=n,t.join(" ")},this.createTable=function(e){var t=[],n=!1;for(var r in e.columns)r===this.idAttribute&&(n=!0),t.push(r+" "+this.column(e.columns[r]));!n&&this.idAttribute===ALLOY_ID_DEFAULT&&t.push(ALLOY_ID_DEFAULT+" TEXT");var i="CREATE TABLE IF NOT EXISTS "+this.table+" ( "+t.join(",")+")",s=Ti.Database.open(this.dbname);s.execute(i),s.close()},this.dropTable=function(e){var t=Ti.Database.open(this.dbname);t.execute("DROP TABLE IF EXISTS "+this.table),t.close()},this.insertRow=function(e){var t=[],n=[],r=[],i=!1;for(var s in e)s===this.idAttribute&&(i=!0),t.push(s),n.push(e[s]),r.push("?");!i&&this.idAttribute===ALLOY_ID_DEFAULT&&(t.push(this.idAttribute),n.push(util.guid()),r.push("?"));var o=Ti.Database.open(this.dbname);o.execute("INSERT INTO "+this.table+" ("+t.join(",")+") VALUES ("+r.join(",")+");",n),o.close()},this.deleteRow=function(e){var t="DELETE FROM "+this.table,n=_.keys(e),r=n.length,i=[],s=[];r&&(t+=" WHERE ");for(var o=0;o<r;o++)i.push(n[o]+" = ?"),s.push(e[n[o]]);t+=i.join(" AND ");var u=Ti.Database.open(this.dbname);u.execute(t,s),u.close()}}function Sync(e,t,n){var r=e.config.adapter.collection_name,i=e.config.columns,s=e.config.adapter.db_name||ALLOY_DB_DEFAULT,o=null,u;switch(t){case"create":o=function(){e.id||(e.idAttribute===ALLOY_ID_DEFAULT?e.id=util.guid():e.id=null,e.set(e.idAttribute,e.id));var t=[],n=[],o=[];for(var a in i)t.push(a),n.push(e.get(a)),o.push("?");var f="INSERT INTO "+r+" ("+t.join(",")+") VALUES ("+o.join(",")+");";return u=Ti.Database.open(s),u.execute(f,n),u.close(),e.toJSON()}();break;case"read":var a=n.query||"SELECT * FROM "+r;u=Ti.Database.open(s);var f=u.execute(a),l=0,c=[];while(f.isValidRow()){var h={},p=0;p=_.isFunction(f.fieldCount)?f.fieldCount():f.fieldCount,_.times(p,function(e){var t=f.fieldName(e);h[t]=f.fieldByName(t)}),c.push(h),l++,f.next()}f.close(),u.close(),e.length=l,l===1?o=c[0]:o=c;break;case"update":var d=[],c=[],v=[];for(var m in i)d.push(m+"=?"),c.push(e.get(m)),v.push("?");var a="UPDATE "+r+" SET "+d.join(",")+" WHERE "+e.idAttribute+"=?";c.push(e.id),u=Ti.Database.open(s),u.execute(a,c),u.close(),o=e.toJSON();break;case"delete":var a="DELETE FROM "+r+" WHERE "+e.idAttribute+"=?";u=Ti.Database.open(s),u.execute(a,e.id),u.close(),e.id=null,o=e.toJSON()}o?(_.isFunction(n.success)&&n.success(o),t==="read"&&e.trigger("fetch")):_.isFunction(n.error)&&n.error("Record not found")}function GetMigrationFor(e,t){var n=Ti.Database.open(e);n.execute("CREATE TABLE IF NOT EXISTS migrations (latest TEXT, model TEXT)");var r=n.execute("SELECT latest FROM migrations where model = ?",t);if(r.isValidRow()){var i=r.field(0);return r.close(),n.close(),i+""}return n.close(),null}function Migrate(e){var t=e.migrations||[],n={};t.length&&t[t.length-1](n);var r=e.prototype.config;r.adapter.db_name||(r.adapter.db_name=ALLOY_DB_DEFAULT);var i=new SQLiteMigrateDB(r),s=typeof r.adapter.migration=="undefined"||r.adapter.migration===null?n.id:r.adapter.migration;if(typeof s=="undefined"||s===null){i.createTable(r);return}s+="";var o=GetMigrationFor(r.adapter.db_name,r.adapter.collection_name),u;if(o===s)return;o&&o>s?(u=0,t.reverse()):u=1,db=Ti.Database.open(r.adapter.db_name),db.execute("BEGIN;");if(t.length)for(var a=0;a<t.length;a++){var f=t[a],l={};f(l);if(u&&l.id>s)break;if(!u&&l.id<=s)break;var c=u?"up":"down";_.isFunction(l[c])&&l[c](i,db)}else i.createTable(r);db.execute("DELETE FROM migrations where model = ?",r.adapter.collection_name),db.execute("INSERT INTO migrations VALUES (?,?)",s,r.adapter.collection_name),db.execute("COMMIT;"),db.close()}function installDatabase(e){var t=e.adapter.db_file,n=e.adapter.collection_name,r=/^([\/]{0,1})([^\/]+)\.[^\/]+$/,i=t.match(r);if(i===null)throw'Invalid sql database filename "'+t+'"';var s=e.adapter.db_name=i[2];Ti.API.debug('Installing sql database "'+t+'" with name "'+s+'"');var o=Ti.Database.install(t,s),u=o.execute('pragma table_info("'+n+'");'),a={};while(u.isValidRow()){var f=u.fieldByName("name"),l=u.fieldByName("type");a[f]=l,f===ALLOY_ID_DEFAULT&&!e.adapter.idAttribute&&(e.adapter.idAttribute=ALLOY_ID_DEFAULT),u.next()}e.columns=a,u.close();if(e.adapter.idAttribute){if(!_.contains(_.keys(e.columns),e.adapter.idAttribute))throw'config.adapter.idAttribute "'+e.adapter.idAttribute+'" not found in list of columns for table "'+n+'"\n'+"columns: ["+_.keys(e.columns).join(",")+"]"}else Ti.API.info('No config.adapter.idAttribute specified for table "'+n+'"'),Ti.API.info('Adding "'+ALLOY_ID_DEFAULT+'" to uniquely identify rows'),o.execute("ALTER TABLE "+n+" ADD "+ALLOY_ID_DEFAULT+" TEXT;"),e.columns[ALLOY_ID_DEFAULT]="TEXT",e.adapter.idAttribute=ALLOY_ID_DEFAULT;o.close()}var _=require("alloy/underscore")._,util=require("alloy/sync/util"),ALLOY_DB_DEFAULT="_alloy_",ALLOY_ID_DEFAULT="alloy_id",cache={config:{},Model:{}};module.exports.beforeModelCreate=function(e,t){if(cache.config[t])return cache.config[t];if(Ti.Platform.osname==="mobileweb"||typeof Ti.Database=="undefined")throw"No support for Ti.Database in MobileWeb environment.";return e.adapter.db_file&&installDatabase(e),e.adapter.idAttribute||(Ti.API.info('No config.adapter.idAttribute specified for table "'+e.adapter.collection_name+'"'),Ti.API.info('Adding "'+ALLOY_ID_DEFAULT+'" to uniquely identify rows'),e.columns[ALLOY_ID_DEFAULT]="TEXT",e.adapter.idAttribute=ALLOY_ID_DEFAULT),cache.config[t]=e,e},module.exports.afterModelCreate=function(e,t){return cache.Model[t]?cache.Model[t]:(e||(e={}),e.prototype.idAttribute=e.prototype.config.adapter.idAttribute,Migrate(e),cache.Model[t]=e,e)},module.exports.sync=Sync