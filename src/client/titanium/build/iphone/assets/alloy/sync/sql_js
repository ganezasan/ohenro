function S4(){return((1+Math.random())*65536|0).toString(16).substring(1)}function guid(){return S4()+S4()+"-"+S4()+"-"+S4()+"-"+S4()+"-"+S4()+S4()+S4()}function InitAdapter(e){if(!db){if(Ti.Platform.osname==="mobileweb"||typeof Ti.Database=="undefined")throw"No support for Ti.Database in MobileWeb environment.";db=Ti.Database.open("_alloy_"),module.exports.db=db,db.execute("CREATE TABLE IF NOT EXISTS migrations (latest TEXT, model TEXT)")}return{}}function GetMigrationFor(e){var t,n=db.execute("SELECT latest FROM migrations where model = ?",e);return n.isValidRow()&&(t=n.field(0)),n.close(),t}function SQLiteMigrateDB(){this.column=function(e){switch(e){case"string":case"varchar":case"text":return"TEXT";case"int":case"tinyint":case"smallint":case"bigint":case"integer":return"INTEGER";case"double":case"float":case"real":return"REAL";case"blob":return"BLOB";case"decimal":case"number":case"date":case"datetime":case"boolean":return"NUMERIC";case"null":return"NULL"}return"TEXT"},this.createTable=function(e){Ti.API.info("create table migration called for "+e.adapter.collection_name);var t=this,n=[];for(var r in e.columns)n.push(r+" "+t.column(e.columns[r]));var i="CREATE TABLE IF NOT EXISTS "+e.adapter.collection_name+" ( "+n.join(",")+",id"+" )";Ti.API.info(i),db.execute(i)},this.dropTable=function(e){Ti.API.info("drop table migration called for "+e),db.execute("DROP TABLE IF EXISTS "+e)}}function Sync(e,t,n){var r=e.config.adapter.collection_name,i=e.config.columns,s=null;switch(t){case"create":s=function(){e.id||(e.id=guid(),e.set(e.idAttribute,e.id));var t=[],n=[],s=[];for(var o in i)t.push(o),n.push(e.get(o)),s.push("?");var u="INSERT INTO "+r+" ("+t.join(",")+",id) VALUES ("+s.join(",")+",?)";return n.push(e.id),db.execute(u,n),e.toJSON()}();break;case"read":var o="SELECT * FROM "+r,u=db.execute(o),a=0,f=[];while(u.isValidRow()){var l={},c=0;c=_.isFunction(u.fieldCount)?u.fieldCount():u.fieldCount,_.times(c,function(e){var t=u.fieldName(e);l[t]=u.fieldByName(t)}),f.push(l),a++,u.next()}u.close(),e.length=a,a===1?s=f[0]:s=f;break;case"update":var h=[],f=[],p=[];for(var d in i)h.push(d+"=?"),f.push(e.get(d)),p.push("?");var o="UPDATE "+r+" SET "+h.join(",")+" WHERE id=?",v=o+","+f.join(",")+","+e.id;f.push(e.id),db.execute(o,f),s=e.toJSON();break;case"delete":var o="DELETE FROM "+r+" WHERE id=?";db.execute(o,e.id),e.id=null,s=e.toJSON()}s?(_.isFunction(n.success)&&n.success(s),t==="read"&&e.trigger("fetch")):_.isFunction(n.error)&&n.error("Record not found")}function GetMigrationForCached(e,t){if(t[e])return t[e];var n=GetMigrationFor(e);return n&&(t[e]=n),n}function Migrate(e,t){var n,r=new SQLiteMigrateDB,i={};db.execute("BEGIN;"),e.length?(_.each(e,function(e){var t={};e(t);var s=GetMigrationForCached(t.name,i);Ti.API.info("mid = "+s+", name = "+t.name),!s||t.id>s?(Ti.API.info("Migration starting to "+t.id+" for "+t.name),n&&_.isFunction(n.down)&&n.down(r),_.isFunction(t.up)&&(t.down(r),t.up(r)),n=t):(Ti.API.info("skipping migration "+t.id+", already performed"),n=null)}),n&&n.id&&(db.execute("DELETE FROM migrations where model = ?",n.name),db.execute("INSERT INTO migrations VALUES (?,?)",n.id,n.name))):r.createTable(t),db.execute("COMMIT;")}var _=require("alloy/underscore")._,db;module.exports.sync=Sync,module.exports.beforeModelCreate=function(e){return e=e||{},InitAdapter(e),e},module.exports.afterModelCreate=function(e){return e=e||{},e.prototype.config.Model=e,Migrate(e.migrations,e.prototype.config),e}